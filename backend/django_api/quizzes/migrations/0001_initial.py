# Generated by Django 5.2.4 on 2025-07-27 19:00

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('subject', models.CharField(max_length=50)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=20)),
                ('quiz_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('fill_blank', 'Fill in the Blank'), ('matching', 'Matching'), ('essay', 'Essay')], max_length=20)),
                ('instructions', models.TextField(blank=True)),
                ('time_limit', models.IntegerField(blank=True, help_text='Time limit in minutes', null=True)),
                ('passing_score', models.IntegerField(default=70, help_text='Passing score percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_ai_generated', models.BooleanField(default=False)),
                ('source_content', models.TextField(blank=True, help_text='Content used to generate quiz')),
                ('ai_prompt', models.TextField(blank=True, help_text='Prompt used for AI generation')),
                ('total_attempts', models.IntegerField(default=0)),
                ('average_score', models.FloatField(default=0.0)),
                ('total_questions', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'quizzes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('points_earned', models.IntegerField(default=0)),
                ('time_spent', models.IntegerField(default=0, help_text='Time spent on this question in seconds')),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'quiz_answers',
                'ordering': ['answered_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('fill_blank', 'Fill in the Blank'), ('matching', 'Matching'), ('essay', 'Essay')], max_length=20)),
                ('options', models.JSONField(default=list, help_text='List of answer options')),
                ('correct_answer', models.CharField(help_text='Correct answer or answer key', max_length=500)),
                ('points', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('difficulty_level', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=20)),
                ('is_ai_generated', models.BooleanField(default=False)),
                ('explanation', models.TextField(blank=True, help_text='Explanation of the correct answer')),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'quiz_questions',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], default='in_progress', max_length=20)),
                ('score', models.FloatField(default=0.0)),
                ('total_points', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('total_questions', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_taken', models.IntegerField(default=0, help_text='Time taken in seconds')),
                ('passed', models.BooleanField(default=False)),
                ('feedback', models.TextField(blank=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='quizzes.quiz')),
            ],
            options={
                'db_table': 'quiz_attempts',
                'ordering': ['-started_at'],
            },
        ),
    ]
